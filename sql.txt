DROP TABLE IF EXISTS recipe_uses_ingredient; 
DROP TABLE  IF EXISTS  ingredients;
DROP TABLE IF EXISTS measurementTypes;
DROP TABLE  IF EXISTS  recipes;
DROP TABLE  IF EXISTS users;

 CREATE TABLE users(
 id VARCHAR(20) PRIMARY KEY NOT NULL,
 password VARCHAR(20) NOT NULL,
 firstname VARCHAR(20) NOT NULL,
 lastname VARCHAR(20) NOT NULL 
 );
 
 INSERT INTO users (id,password,firstname,lastname) VALUES ("bob","boby123","Bob","Smith");
 
 
 create table recipes (
 id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
 owner_fk VARCHAR(20) NOT NULL,
 title VARCHAR(200) NOT NULL, 
 instructions TEXT NOT NULL,
 FOREIGN KEY (owner_fk) REFERENCES users(id)
 );
 INSERT INTO recipes (id,owner_fk,title,instructions) VALUES(1,"bob","Bob's awesome chicken soup","Make bob's awesome chicken soup");
 

 create table ingredients (
 id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
 title varchar(100) NOT NULL,
 description TEXT NOT NULL
 );
 INSERT INTO ingredients (id,title,description) VALUES(1,"Chicken","meat from a chicken");
 INSERT INTO ingredients (id,title,description) VALUES(2,"Water","Water");
 
  CREATE TABLE measurement_types(
 id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
 title VARCHAR(100) NOT NULL,
 description TEXT NOT NULL
 );
 INSERT INTO measurement_types (id,title,description) VALUES(1,"pound","pound");
 INSERT INTO measurement_types (id,title,description) VALUES(2,"gallon","gallon");
 

 create table recipe_uses_ingredient (
 id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
 recipe_fk INT NOT NULL,
 ingredient_fk INT NOT NULL,
 measurementType_fk INT NOT NULL,
 quantity INT NOT NULL, 
 FOREIGN KEY (recipe_fk) REFERENCES recipes(id),
 FOREIGN KEY (ingredient_fk) REFERENCES ingredients(id),
 FOREIGN KEY (measurementType_fk) REFERENCES measurement_types(id)
 );
#Bob's awesome chicken soup uses 1 pound of chicken
INSERT INTO recipe_uses_ingredient (id,recipe_fk,ingredient_fk,measurementType_fk, quantity) VALUES (1,1,1,1,1);
#Bob's awesome chicken soup uses 1 gallon of water
INSERT INTO recipe_uses_ingredient (id,recipe_fk,ingredient_fk,measurementType_fk, quantity) VALUES (2,1,2,2,1);
